/*
 * The MIT License
 *
 * Copyright 2014 budthapa.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package calculatorV11;

//import calculator.*;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * Calculator for simple Mathematical operation Started on 20-Feb-2014
 * Simple Calculator
 * Version 1.1
 * Updated on 25-Feb-2014
 * budthapa@gmail.com
 * 
 * @author budthapa
 */
public class CalculatorV11 extends javax.swing.JFrame {

    /**
     * Creates new form NewMainWindow
     */
    public CalculatorV11() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNumbers = new javax.swing.JPanel();
        jButtonDelete = new javax.swing.JButton();
        jButtonDivide = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonFraction = new javax.swing.JButton();
        jButtonSub = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonEqual = new javax.swing.JButton();
        jButtonSquare = new javax.swing.JButton();
        jButtonRoot = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonDecimal = new javax.swing.JButton();
        jButtonPercent = new javax.swing.JButton();
        jButtonClearAll = new javax.swing.JButton();
        jPanelTextField = new javax.swing.JPanel();
        jTextField = new javax.swing.JTextField();
        jLabelError = new javax.swing.JLabel();
        jTextFieldHistory = new javax.swing.JTextField();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuFileExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuHelpContents = new javax.swing.JMenuItem();
        jMenuHelpReportBug = new javax.swing.JMenuItem();
        jHelpMenuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setName("frameCalculator"); // NOI18N
        setResizable(false);

        jButtonDelete.setText("Del");
        jButtonDelete.setToolTipText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonDivide.setText("/");
        jButtonDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivideActionPerformed(evt);
            }
        });

        jButtonMultiply.setText("x");
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });

        jButtonFraction.setText("1/x");
        jButtonFraction.setToolTipText("Fraction");
        jButtonFraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFractionActionPerformed(evt);
            }
        });

        jButtonSub.setText("-");
        jButtonSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubActionPerformed(evt);
            }
        });

        jButtonAdd.setText("+");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonEqual.setText("=");
        jButtonEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEqualActionPerformed(evt);
            }
        });

        jButtonSquare.setText("x*x");
        jButtonSquare.setToolTipText("Square");
        jButtonSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSquareActionPerformed(evt);
            }
        });

        jButtonRoot.setText("âˆšx");
        jButtonRoot.setToolTipText("Square Root");
        jButtonRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRootActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButtonDecimal.setText(".");
        jButtonDecimal.setToolTipText("Dot");
        jButtonDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecimalActionPerformed(evt);
            }
        });

        jButtonPercent.setText("%");
        jButtonPercent.setToolTipText("Percentage");
        jButtonPercent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPercentActionPerformed(evt);
            }
        });

        jButtonClearAll.setText("CA");
        jButtonClearAll.setToolTipText("Reset Calculation Area");
        jButtonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNumbersLayout = new javax.swing.GroupLayout(jPanelNumbers);
        jPanelNumbers.setLayout(jPanelNumbersLayout);
        jPanelNumbersLayout.setHorizontalGroup(
            jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNumbersLayout.createSequentialGroup()
                .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelNumbersLayout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelNumbersLayout.createSequentialGroup()
                        .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelNumbersLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSub, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSquare, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelNumbersLayout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFraction, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEqual, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelNumbersLayout.setVerticalGroup(
            jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNumbersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButtonDivide)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonClearAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButtonRoot)
                    .addComponent(jButtonFraction)
                    .addComponent(jButtonMultiply))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelNumbersLayout.createSequentialGroup()
                        .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButtonSquare)
                            .addComponent(jButtonSub))
                        .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelNumbersLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelNumbersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonPercent)
                                    .addComponent(jButton0)
                                    .addComponent(jButtonDecimal)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNumbersLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButtonEqual, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTextField.setEditable(false);
        jTextField.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        jTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField.setToolTipText("Calculation Area");
        jTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(128, 141, 254), null));

        jLabelError.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabelError.setForeground(new java.awt.Color(254, 12, 3));
        jLabelError.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanelTextFieldLayout = new javax.swing.GroupLayout(jPanelTextField);
        jPanelTextField.setLayout(jPanelTextFieldLayout);
        jPanelTextFieldLayout.setHorizontalGroup(
            jPanelTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTextFieldLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTextFieldLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTextField))
                .addContainerGap())
        );
        jPanelTextFieldLayout.setVerticalGroup(
            jPanelTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTextFieldLayout.createSequentialGroup()
                .addComponent(jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTextFieldHistory.setEditable(false);
        jTextFieldHistory.setBackground(javax.swing.UIManager.getDefaults().getColor("winclassic_tab_sel_gradient"));
        jTextFieldHistory.setForeground(new java.awt.Color(155, 141, 141));
        jTextFieldHistory.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldHistory.setText("History");
        jTextFieldHistory.setToolTipText("Saves recent performed calculations.");
        jTextFieldHistory.setFocusable(false);
        jTextFieldHistory.setName("hi"); // NOI18N

        jMenu1.setText("File");

        jMenuFileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileExit.setText("Exit");
        jMenuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuFileExit);

        jMenuBar.add(jMenu1);

        jMenu2.setText("Help");

        jMenuHelpContents.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuHelpContents.setText("Contents");
        jMenu2.add(jMenuHelpContents);

        jMenuHelpReportBug.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMenuHelpReportBug.setText("Report Bug");
        jMenuHelpReportBug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpReportBugActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuHelpReportBug);

        jHelpMenuAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jHelpMenuAbout.setText("About");
        jHelpMenuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHelpMenuAboutActionPerformed(evt);
            }
        });
        jMenu2.add(jHelpMenuAbout);

        jMenuBar.add(jMenu2);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanelTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldHistory))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private String finalResult = "0";

    /**
     * Calculate percentage of any value. Denominator value should be larger
     * than numerator value.
     *
     * @param evt
     */
    private void jButtonPercentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPercentActionPerformed
        // Calculate the percentage of the given value
        //first divide two values
        String text = jTextField.getText();

        //find the index of division
        int pos = text.indexOf("/");

        //get the substring of leftside from the divide sign
        if (pos > 0) {
            String substrLeft = text.substring(0, pos);
            //get the substring of right side from the divide sign
            String substrRight = text.substring(pos + 1, text.length());

            if (!substrRight.isEmpty()) {

                //convert the left string value to integer type
                float numLeft = Float.parseFloat(substrLeft);

                //convert the right string value to integer type
                float numRight = Float.parseFloat(substrRight);
                try {
                    if (numRight != 0) {
                        double resultDiv = numLeft / numRight;
                        if (numRight < numLeft) {
                            jLabelError.setText("Denominator must be larger");
                            jTextField.setText(text);
                        } else {
                            double percent = resultDiv * 100;
                            finalResult(percent); //calling finalResult() method
                        }
                    } else {
                        jTextField.setText(text);
                        jLabelError.setText("Cannot divide by zero");
                    }
                } catch (ArithmeticException e) {

                }
            }
        }
    }//GEN-LAST:event_jButtonPercentActionPerformed

    /**
     * Decimal operation
     *
     * @param bottonPressed
     */
    private void jButtonDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecimalActionPerformed
        // TODO add your handling code here:
        String decimal = jTextField.getText();

        //check if the text field contains any decimal point
        if (!decimal.contains(".")) {
            jTextField.setText(decimal.concat("."));

        }

        //get the new text field with decimal point
        String newDecimal = jTextField.getText();

        //check if the field contains the following operators
        String[] op = {"/", "*", "+", "-"};
        for (String ops : op) {
            //find the index of operator
            int opIndex = newDecimal.indexOf(ops);
//            find the index of decimal
            int decIndex = newDecimal.lastIndexOf(".");
//            System.out.println(decIndex);

            //check if index of decimal is less or not
            if (decIndex < opIndex) {
                jTextField.setText(decimal.concat("."));
            }
        }
        holdHistory();
    }//GEN-LAST:event_jButtonDecimalActionPerformed

    /**
     * Action when zero is pressed
     *
     * @param zeroBtnPressed
     */
    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        // TODO add your handling code here:
        String zero = jTextField.getText();
        if (zero.isEmpty()) {

        } else {
            buttonValue("0");
        }
        holdHistory();
    }//GEN-LAST:event_jButton0ActionPerformed

    /**
     * Action when 3 is pressed
     *
     * @param threeBtnPressed
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        buttonValue("3");
        holdHistory();
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * Action when 2 is pressed
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        buttonValue("2");
        holdHistory();
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Action when 1 is pressed
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // set the textfield value to one
        // jTextField.setText("1");
        //check if the text area contains the calculated value
        //if contains replace it with the new value
        buttonValue("1");
        holdHistory();
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Action when 6 is pressed
     *
     * @param evt
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        buttonValue("6");
        holdHistory();
    }//GEN-LAST:event_jButton6ActionPerformed
    /**
     * Action when 5 is pressed
     *
     * @param evt
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        buttonValue("5");
        holdHistory();
    }//GEN-LAST:event_jButton5ActionPerformed
    /**
     * Action when 4 is pressed
     *
     * @param evt
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        buttonValue("4");
        holdHistory();
    }//GEN-LAST:event_jButton4ActionPerformed
    /**
     * Action when 9 is pressed
     *
     * @param evt
     */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        buttonValue("9");
    }//GEN-LAST:event_jButton9ActionPerformed
    /**
     * Action when 8 is pressed
     *
     * @param evt
     */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        buttonValue("8");
        holdHistory();
    }//GEN-LAST:event_jButton8ActionPerformed
    /**
     * Action when 7 is pressed
     *
     * @param evt
     */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        buttonValue("7");
        holdHistory();
    }//GEN-LAST:event_jButton7ActionPerformed
    /**
     * Calculate the final result when equal button is pressed
     *
     * @param evt
     */
    private void jButtonEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEqualActionPerformed
        // calculate the mathmatical operation by calling the calculatetextArea() method
        String textValue = jTextField.getText();
        if (textValue.contains("/")) {
            calculateTextArea("/");
        } else if (textValue.contains("*")) {
            calculateTextArea("*");
        } else if (textValue.contains("+")) {
            calculateTextArea("+");
        } else if (textValue.contains("-")) {
            calculateTextArea("-");
        }
    }//GEN-LAST:event_jButtonEqualActionPerformed
    /**
     * Addition operator
     *
     * @param evt
     */
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        checkExtraOperator("+");
        holdHistory();
    }//GEN-LAST:event_jButtonAddActionPerformed
    /**
     * Subtraction operator
     *
     * @param evt
     */
    private void jButtonSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubActionPerformed
        // TODO add your handling code here:

        checkExtraOperator("-");
        holdHistory();
    }//GEN-LAST:event_jButtonSubActionPerformed
    /**
     * Calculate the fraction of the given value
     *
     * @param evt
     */
    private void jButtonFractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFractionActionPerformed
        // get the textField value for calculation
        String value = jTextField.getText();
        //check if text field has valid number
        if (!numFormatException()) {
            //check if the text field is empty, if not start calculation
            if (!value.isEmpty()) {
                Float newValue = Float.parseFloat(value);
                float fraction = 1 / newValue;
                jTextField.setText(Float.toString(fraction));
            }
        }
        holdHistory();
    }//GEN-LAST:event_jButtonFractionActionPerformed
    /**
     * Multiplication operator
     *
     * @param evt
     */
    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
        // TODO add your handling code here:
        checkExtraOperator("*");
        holdHistory();
    }//GEN-LAST:event_jButtonMultiplyActionPerformed
    /**
     * Division operator
     *
     * @param evt
     */
    private void jButtonDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivideActionPerformed
        // TODO add your handling code here:
        checkExtraOperator("/");
        holdHistory();
    }//GEN-LAST:event_jButtonDivideActionPerformed
    /**
     * Button to delete single character from the right to left
     *
     * @param evt
     */
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String del = jTextField.getText();

        //deleting the last character at each click
        if (del.isEmpty()) {
            jTextField.setText("");
        } else {
            String newStr = del.substring(0, del.length() - 1);

            //check is the new String is empty
            //if empty, set the value to 0 in text field else set the remaining value
            if (newStr.isEmpty() || del.isEmpty()) {
                jTextField.setText("0");
            } else {
                jTextField.setText(newStr);
            }
        }
        holdHistory();
        jLabelError.setText("");
    }//GEN-LAST:event_jButtonDeleteActionPerformed
    /**
     * Reset the value of the Text field
     *
     * @param evt
     */
    private void jButtonClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearAllActionPerformed
        // TODO add your handling code here:
        jTextField.setText("");
        jLabelError.setText("");
        jTextFieldHistory.setText("");
    }//GEN-LAST:event_jButtonClearAllActionPerformed
    /**
     * Calculate the square of the given value
     *
     * @param evt
     */
    private void jButtonSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSquareActionPerformed
        // calculate the square of the given value
        String value = jTextField.getText();
        //check if text field value ends with operator sign
        if (!numFormatException()) {
            if (!value.isEmpty()) {
                Double num = Double.parseDouble(value);
                Double toSquare = Math.pow(num, 2);
                finalResult(toSquare);

            }
        }
        holdHistory();
    }//GEN-LAST:event_jButtonSquareActionPerformed
    /**
     * Calculate the square root of the given value
     *
     * @param evt
     */
    private void jButtonRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRootActionPerformed
        // TODO add your handling code here:
        String value = jTextField.getText();
        //check if text field contains valid numbers
        if (!numFormatException()) {
            //check if text field is empty or not
            if (!value.isEmpty()) {
                double toDouble = Double.parseDouble(value);
                if (toDouble < 0) {
                    invalidExpression();
                } else {
                    double root = Math.sqrt(toDouble);
                    String toStr = Double.toString(root);
                    jTextField.setText(toStr);
                }
            }
        }
        holdHistory();
    }//GEN-LAST:event_jButtonRootActionPerformed
    /**
     * Pop-up the about dialog box.
     *
     * @param evt
     */
    private void jHelpMenuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHelpMenuAboutActionPerformed
        JOptionPane.showMessageDialog(null, "Developed by : Buddhi Bal Thapa\n Version: 1.1\n budthapa@gmail.com\n www.budthapa.co.vu");
    }//GEN-LAST:event_jHelpMenuAboutActionPerformed

    private void jMenuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuFileExitActionPerformed

    private void jMenuHelpReportBugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpReportBugActionPerformed
        // open url to report bug
        if (Desktop.isDesktopSupported()) {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.browse(new URI("http://www.budthapa.co.vu/2014/02/simple-calculator-in-java.html"));
            } catch (IOException ex) {
                Logger.getLogger(CalculatorV11.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(CalculatorV11.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Runtime runtime = Runtime.getRuntime();
            try {
                runtime.exec("xdg-open " + "http://www.budthapa.co.vu/2014/02/simple-calculator-in-java.html");
            } catch (IOException ex) {
                Logger.getLogger(CalculatorV11.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuHelpReportBugActionPerformed

    /**
     * This method is used to set numerical values to the text field for
     * calculation If the textField contains the final calculated result,replace
     * it with the new passed value. If it is empty or contains non calculated
     * value, append it the that value. This method is called by every numerical
     * buttons.
     *
     * No return type
     *
     * @param num
     */
    private void buttonValue(String num) {
        if (finalResult.equals(jTextField.getText())) {
            jTextField.setText(num);
        } else {
            String value = jTextField.getText() + num;
            jTextField.setText(value);
        }
    }

    /**
     * Takes string value from the text field and convert them into float. Split
     * the string by taking the operator as a mid point. This method should be
     * called when equal button is pressed. No return type.
     *
     * @param op
     */
    private void calculateTextArea(String op) {
        String text = jTextField.getText();

        //find the index of operator
        int pos = text.indexOf(op);
//        System.out.println(pos);

        int decIndexLeft = text.indexOf(".");
//        System.out.println(decIndexLeft);

//        int decIndexRight = text.indexOf(".");
        int newDecIndexRight = pos + 1;
//        System.out.println(newDecIndexRight);

        if (pos - decIndexLeft == 1 && newDecIndexRight == pos + 1) {
            //calling a method which show the error message
            invalidExpression();
            jTextField.setText(text);

        } else {
            //get the substring of leftside from the divide sign
            String substrLeft = text.substring(0, pos);

            //get the substring of right side from the divide sign
            String substrRight = text.substring(pos + 1, text.length());
            //check is substring starts or ends with decimal, if exists throw error message
            if (substrRight.startsWith(".") || substrRight.endsWith(".")) {
                jTextField.setText(text);
                invalidExpression();
//                jLabelError.setText("Not a valid Expression");
            } else {

                if (!substrRight.isEmpty()) {

                    //convert the left string value to integer type
                    float numLeft = Float.parseFloat(substrLeft);

                    //convert the right string value to integer type
                    float numRight = Float.parseFloat(substrRight);

                    /*
                     * using switch to check the case switch now supports string
                     * operators cool right.
                     */
                    switch (op) {
                        case "/":
                            try {
                                if (numRight != 0) {
                                    double resultDiv = numLeft / numRight;
                                    //float percent = resultDiv * 100;
                                    finalResult(resultDiv); //calling finalResult() method
                                } else {
                                    jTextField.setText(text);
                                    jLabelError.setText("Cannot divide by zero");
                                }
                            } catch (ArithmeticException e) {
                            }
                            break;
                        case "*":
                            double resultMul = numLeft * numRight;
                            finalResult(resultMul);
                            break;
                        case "+":
                            double resultAdd = numLeft + numRight;
                            finalResult(resultAdd);
                            break;
                        case "-":
                            double resultSub = numLeft - numRight;
                            finalResult(resultSub);
                            break;
                    }
                }
            }
        }
    }

    /**
     * Calculate the generated value, result is again converted back to string
     * This method will set the final calculated result to the textField
     *
     * @param result
     */
    private void finalResult(Double result) {
        //convert float back to string
        finalResult = Double.toString(result);
        //set the final result to textfield and display it.
        jTextField.setText(finalResult);
    }

    /**
     * Check extra operator in text field. If already exists, delete the other
     * operator This method is called from every operator buttons where
     * required.
     *
     * @param operator (/,*,+,- etc)
     */
    private void checkExtraOperator(String operator) {
        String textValue = jTextField.getText();
        int size = textValue.length();

        //check if textfield is empty or not
        if (!jTextField.getText().isEmpty()) {
            String sub = jTextField.getText() + operator;
            jTextField.setText(sub);
        }

        //check if textfield already contains some operator
        //if present do not add more operaters
        String[] op = {"/", "*", "+", "-"};
        for (String ops : op) {
            if (textValue.contains(ops)) {
                String newValue = textValue.substring(0, size);
                jTextField.setText(textValue.replace(textValue, newValue));
            }
        }
    }

    /**
     * This method is called when there is some error in text field
     */
    private void invalidExpression() {
        jLabelError.setText("Not a valid Expression");
    }

    /**
     * Check if the text field contains invalid expression when calculating
     * square root, fraction, square etc
     *
     * @return double
     */
    private boolean numFormatException() {
        String value = jTextField.getText();

        try {
            String[] op = {"/", "*", "+", "-"};
            for (String ops : op) {

                if (value.contains(ops)) {
                    invalidExpression();
                    jTextField.setText(value);
                    return true;
                }
            }
            if (value.endsWith(".") || value.startsWith(".")) {
                invalidExpression();
                jTextField.setText(value);
                return true;
            }
        } catch (Exception e) {

        }
        return false;
    }

    /**
     * Save the history of the button pressed by user.
     * Clears memory when user presses CA button
     */
    private void holdHistory() {
        String value = jTextField.getText();
        jTextFieldHistory.setText(value);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorV11.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorV11.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorV11.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorV11.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorV11().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClearAll;
    private javax.swing.JButton jButtonDecimal;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDivide;
    private javax.swing.JButton jButtonEqual;
    private javax.swing.JButton jButtonFraction;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonPercent;
    private javax.swing.JButton jButtonRoot;
    private javax.swing.JButton jButtonSquare;
    private javax.swing.JButton jButtonSub;
    private javax.swing.JMenuItem jHelpMenuAbout;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuFileExit;
    private javax.swing.JMenuItem jMenuHelpContents;
    private javax.swing.JMenuItem jMenuHelpReportBug;
    private javax.swing.JPanel jPanelNumbers;
    private javax.swing.JPanel jPanelTextField;
    private javax.swing.JTextField jTextField;
    private javax.swing.JTextField jTextFieldHistory;
    // End of variables declaration//GEN-END:variables
}
